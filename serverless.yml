service: CorreosTracking

frameworkVersion: '3'


provider:
  name: aws
  runtime: nodejs14.x
  stage: beta
  region: eu-west-1
  deploymentMethod: direct
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ ShipmentsTable, Arn ]
  


functions:
  cronHandler:
    handler: handler.run
    events:
      # Invoke Lambda function every 2nd minute from Mon-Fri
      - schedule: cron(0 * ? * MON-FRI *)
    memorySize: 128 # https://lambda-power-tuning.show/#gAAAAQACAAQABgAIwAs=;IQgWRCC3DET0xgREKDIPRIsUCESTWBNEoycJRA==;bWWpNYWvHjaz8pU2E4EhNxVrZje3S6Y3GUbjNw==
  notificationHandler:
    handler: notificationSender.notifications
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [ShipmentsTable, StreamArn]
          filterPatterns: 
            - eventName: [MODIFY]
    memorySize: 128
resources:
  Resources:
    ShipmentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: shipmentsTable
        AttributeDefinitions:
          - AttributeName: shippingCode
            AttributeType: S
        KeySchema:
          - AttributeName: shippingCode
            KeyType: HASH
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        BillingMode: PAY_PER_REQUEST
